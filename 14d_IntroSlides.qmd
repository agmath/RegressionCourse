---
title: "Higher-Order Terms: Interactions in Regression"
author: Dr. Gilbert
format: 
  revealjs:
    smaller: true
date: today
date-format: long
theme: serif
incremental: true
fontsize: 24pt
---

```{r global-options, include=FALSE}
library(tidyverse)
library(tidymodels)
library(palmerpenguins)
library(patchwork)
library(kableExtra)
library(memer)
library(marginaleffects)
tidymodels_prefer()

penguins <- palmerpenguins::penguins

penguins <- penguins %>%
  mutate(flipper_length_mm = as.numeric(flipper_length_mm),
         body_mass_g = as.numeric(body_mass_g))

set.seed(123)
penguin_splits <- initial_split(penguins)
penguins_train <- training(penguin_splits)
penguins_test <- testing(penguin_splits)

options(kable_styling_bootstrap_options = c("hover", "striped"))
options(scipen = 999)

#Set ggplot base theme
theme_set(theme_bw(base_size = 14))
```

```{css}
code.sourceCode {
  font-size: 1.3em;
  /* or try font-size: xx-large; */
}
```

## Motivation

. . .

::::{.columns}

:::{.column width="15%"}

:::

:::{.column width="70%"}

```{r}
#| fig.height: 4
#| fig.align: center

mlr_fls_spec <- linear_reg() %>%
  set_engine("lm")

mlr_fls_rec <- recipe(body_mass_g ~ flipper_length_mm + species, data = penguins_train) %>%
  step_dummy(species)

mlr_fls_wf <- workflow() %>%
  add_model(mlr_fls_spec) %>%
  add_recipe(mlr_fls_rec)

mlr_fls_fit <- mlr_fls_wf %>%
  fit(penguins_train)

new_data <- crossing(
  flipper_length_mm = seq(
    min(penguins_train$flipper_length_mm, na.rm = TRUE),
    max(penguins_train$flipper_length_mm, na.rm = TRUE),
    length.out = 250),
  species = c("Adelie", "Chinstrap", "Gentoo")
  )

new_data <- mlr_fls_fit %>%
  augment(new_data)

ggplot() + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = .pred,
                color = species),
            lwd = 1.5) + 
  geom_point(data = penguins_train, 
             aes(x = flipper_length_mm,
                 y = body_mass_g,
                 color = species),
             alpha = 0.75) +
  labs(x = "Flipper Length",
       y = "Body Mass",
       caption = "Are parallel lines appropriate here?")
```

:::

:::{.column width="15%"}

:::

::::

. . .

::::{.columns}

:::{.column width="15%"}

:::

:::{.column width="70%"}

```{r}
#| fig.height: 4
#| fig.align: center

ggplot() + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = .pred,
                color = species),
            lwd = 1.5) + 
  geom_point(data = penguins_train, 
             aes(x = flipper_length_mm,
                 y = body_mass_g,
                 color = species),
             alpha = 0.75) +
  labs(x = "Flipper Length",
       y = "Body Mass") + 
  facet_wrap(~species, ncol = 3) + 
  theme(legend.position = "None")
```

:::

:::{.column width="15%"}

:::

::::

## Motivation

. . . 

In our first discussion on higher-order terms, we saw how to use polynomial terms in regression models

+ We use polynomial terms when the expected change in the response due to a change in the value of a predictor changes depending on the "current" value of the predictor
+ That is, the expected change in the response due to a change in the predictor is *not constant*

. . .

There is another way for an association between predictor and response to be non-constant...

. . . 

> What if the effect of a change in one predictor on the response depends on the value of another predictor, as we came to suspect with flipper length, species, and body mass on the previous slide?

. . .

We can handle this scenario using *interactions*

## Types of Interactions

. . .

There are three main types of *two-way interactions*

+ **Categorical-Categorical:** An interaction between two categorical variables
+ **Categorical-Numerical:** An interaction between a categorical variable and a numerical variable
+ **Numerical-Numerical:** An interaction between two numerical variables

. . . 

We'll see what each one accommodates and how to implement each type of interaction here

## A Note Before Moving Forward

. . .

This notebook omits both global assessments of model utility and individual term-based assessments in order to focus on the types of interactions available to us, why we use them, and what phenomena we are trying to model when we use a particular type of interaction

. . .

As with all previously discussed topics, we conduct term-based assessments and remove individual terms which are insignificant, one at a time, in order of highest $p$-value to lowest

. . .

If a higher order term (ie. an interaction) is deemed significant, then all of its component lower order terms must be kept in the model, regardless of statistical significance

## Playing Along

Hopefully, you've become accustomed to playing along with the used cars data set (or another data set you find more interesting) during our discussions. I encourage you to continue doing this.

1. Open RStudio and verify that you are working within your `MAT300` project
2. Open the notebook you've been building onto since we began with our first discussion on *simple linear regression*
3. Run all of the code in the notebook
4. Add a section on *models with interaction terms*

## Reminder: Models with Categorical Predictors

. . .

Recall that the effect of including a categorical predictor in a model is an adjustment in the model intercept for each category.

. . .

Below are visual representations of two models, both using flipper length as predictors but one using `species` as an additional predictor of body mass and the other using `year`

. . .

::::{.columns}

:::{.column width="15%"}

:::

:::{.column width="70%"}

```{r}
mlr_fly_spec <- linear_reg() %>%
  set_engine("lm")

mlr_fly_rec <- recipe(body_mass_g ~ flipper_length_mm + year, data = penguins_train) %>%
  step_mutate(year = as.factor(year)) %>%
  step_dummy(year)

mlr_fly_wf <- workflow() %>%
  add_model(mlr_fly_spec) %>%
  add_recipe(mlr_fly_rec)

mlr_fly_fit <- mlr_fly_wf %>%
  fit(penguins_train)

new_data <- crossing(
  flipper_length_mm = seq(
    min(penguins_train$flipper_length_mm, na.rm = TRUE),
    max(penguins_train$flipper_length_mm, na.rm = TRUE),
    length.out = 250),
  year = c(2007, 2008, 2009),
  species = c("Adelie", "Chinstrap", "Gentoo")
  )

new_data <- mlr_fls_fit %>%
  augment(new_data) %>%
  rename(species.pred = .pred)

new_data <- mlr_fly_fit %>%
  augment(new_data) %>%
  rename(year.pred = .pred)

p1 <- ggplot() + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = species.pred,
                color = species),
            lwd = 1.5) + 
  geom_point(data = penguins_train, 
             aes(x = flipper_length_mm,
                 y = body_mass_g,
                 color = species),
             alpha = 0.75) +
  labs(x = "Flipper Length",
       y = "Body Mass")

p2 <- ggplot() + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = year.pred,
                linetype = as.factor(year)),
            color = "blue",
            alpha = 0.75,
            lwd = 1.25) + 
  geom_point(data = penguins_train, 
             aes(x = flipper_length_mm,
                 y = body_mass_g,
                 shape = as.factor(year)),
             show.legend = FALSE,
             alpha = 0.75) +
  labs(x = "Flipper Length",
       y = "Body Mass",
       linetype = "Year")

p1 + p2
```

:::

:::{.column width="15%"}

:::

::::

## Models with Categorical Predictors (Cont'd.)

. . .

We could even build a model that compensates for both `species` and `year` simultaneously

. . .

A visual of such a model appears below

. . .

::::{.columns}

:::{.column width="15%"}

:::

:::{.column width="70%"}

```{r}
mlr_flsy_spec <- linear_reg() %>%
  set_engine("lm")

mlr_flsy_rec <- recipe(body_mass_g ~ flipper_length_mm + species + year, data = penguins_train) %>%
  step_mutate(year = as.factor(year)) %>%
  step_dummy(year) %>%
  step_dummy(species)

mlr_flsy_wf <- workflow() %>%
  add_model(mlr_flsy_spec) %>%
  add_recipe(mlr_flsy_rec)

mlr_flsy_fit <- mlr_flsy_wf %>%
  fit(penguins_train)

new_data <- mlr_flsy_fit %>%
  augment(new_data) %>%
  rename(species.year.pred = .pred)

ggplot() + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = species.year.pred,
                color = species,
                linetype = as.factor(year)),
            lwd = 1) + 
  geom_point(data = penguins_train, 
             aes(x = flipper_length_mm,
                 y = body_mass_g,
                 color = species),
             alpha = 0.75) +
  labs(x = "Flipper Length",
       y = "Body Mass",
       color = "Species", 
       linetype = "Year")
```

:::

:::{.column width="15%"}

:::

::::

## Models with Categorical Predictors (Cont'd.)

. . . 

Let's take a look at this new fitted model

. . .

```{r}
mlr_flsy_fit %>%
  extract_fit_engine() %>%
  tidy() %>%
  kable() %>%
  kable_styling(font_size = 18)
```

. . .

$$\scriptsize{\begin{align} \mathbb{E}\left[\text{body mass}\right] \approx -4905.72 +~ &46.1\cdot\left(\text{flipper length}\right) - 195.3\cdot\left(\text{year2008}\right) +\\ &- 209.68\cdot\left(\text{year2009}\right) - 270.54\cdot\left(\text{speciesChinstrap}\right) +\\ & 117.91\cdot\left(\text{speciesGentoo}\right)\end{align}}$$

. . .

We can see, mathematically, that this model assumes an effect for `species` and an effect for `year` on penguin body mass, independently of one another

. . .

That is, year-to-year, all penguins body masses are impacted in the same way, regardless of species

## Interactions Between Categorical Predictors

. . .

It would be reasonable to ask whether yearly conditions had different impacts across the species of penguin

. . .

We can answer this by constructing and analysing a model that includes an interaction between `year` and `species`

. . .

We can compare the previous model form to this proposed model form below.

. . .

**Model with Year and Species Independently:**

$$\scriptsize{\begin{align} \mathbb{E}\left[\text{body mass}\right] \approx \beta_0 +~ &\beta_1\cdot\left(\text{flipper length}\right) + \beta_2\cdot\left(\text{year2008}\right) + \beta_3\cdot\left(\text{year2009}\right) +\\  &\beta_4\cdot\left(\text{speciesChinstrap}\right) + \beta_5\cdot\left(\text{speciesGentoo}\right)\end{align}}$$

. . .

**Model with Interaction Between Year and Species:**

$$\scriptsize{\begin{align} \mathbb{E}\left[\text{body mass}\right] \approx \beta_0 +~ &\beta_1\cdot\left(\text{flipper length}\right) + \beta_2\cdot\left(\text{year2008}\right) + \beta_3\cdot\left(\text{year2009}\right) +\\  &\beta_4\cdot\left(\text{speciesChinstrap}\right) + \beta_5\cdot\left(\text{speciesGentoo}\right) +\\ 
&\beta_6\cdot\left(\text{speciesGentoo}\cdot\text{year2008}\right) +\\ 
&\beta_7\cdot\left(\text{speciesGentoo}\cdot\text{year2009}\right) +\\
&\beta_8\cdot\left(\text{speciesChinstrap}\cdot\text{year2008}\right) +\\ 
&\beta_9\cdot\left(\text{speciesChinstrap}\cdot\text{year2009}\right)
\end{align}}$$

## Building a Model with Interactions

. . . 

In `{tidymodels}`, we use `step_interact()` as part of our *recipe* to create an interaction

. . .

```{r}
#| echo: true
#| eval: true

mlr_flsy_isy_spec <- linear_reg() %>%
  set_engine("lm")

mlr_flsy_isy_rec <- recipe(body_mass_g ~ flipper_length_mm + species + year, 
                           data = penguins_train) %>%
  step_mutate(year = as.factor(year)) %>%
  step_dummy(year) %>%
  step_dummy(species) %>%
  step_interact(~ starts_with("species"):starts_with("year"))

mlr_flsy_isy_wf <- workflow() %>%
  add_model(mlr_flsy_isy_spec) %>%
  add_recipe(mlr_flsy_isy_rec)

mlr_flsy_isy_fit <- mlr_flsy_isy_wf %>%
  fit(penguins_train)
```

## Building a Model with Interactions

<center>
<font size="120pt"><br/>
$\bigstar$ Let's try it! $\bigstar$

<br/>
</font>
</center>

1. Choose two categorical variables and one numerical variable to use in predicting the rental price of an Air BnB
2. Build the corresponding model *specification* and *recipe* which will accommodate an interaction between the two categorical predictors
3. Package your *specification* and *recipe* together into a *workflow*
4. *Fit* your *workflow* to your training data

## The Estimated Model

. . .

```{r}
mlr_flsy_isy_fit %>%
  extract_fit_engine() %>%
  tidy() %>%
  kable() %>%
  kable_styling()
```

. . .

$\displaystyle{\mathbb{E}\left[\text{body mass}\right] \approx~...}$

## The Estimated Model (Cont'd.)

. . .

::::{.columns}

:::{.column width="15%"}

:::

:::{.column width="70%"}

```{r}
#| fig.align: center
#| fig.height: 4

new_data <- mlr_flsy_isy_fit %>%
  augment(new_data) %>%
  rename(isy.pred = .pred)

ggplot() + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = isy.pred,
                color = species,
                linetype = as.factor(year)),
            lwd = 1) + 
  geom_point(data = penguins_train, 
             aes(x = flipper_length_mm,
                 y = body_mass_g,
                 color = species,
                 shape = as.factor(year)),
             alpha = 0.75) +
  labs(x = "Flipper Length",
       y = "Body Mass",
       color = "species",
       linetype = "Year",
       shape = "Year")
```

:::

:::{.column width="15%"}

:::

::::

. . . 

::::{.columns}

:::{.column width="15%"}

:::

:::{.column width="70%"}

```{r}
#| fig.align: center
#| fig.height: 4

ggplot() + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = isy.pred,
                color = species,
                linetype = as.factor(year)),
            lwd = 1.5) + 
  geom_point(data = penguins_train, 
             aes(x = flipper_length_mm,
                 y = body_mass_g,
                 color = species,
                 shape = as.factor(year)),
             alpha = 0.75) +
  labs(x = "Flipper Length",
       y = "Body Mass") + 
  theme(legend.position = "None") +
  facet_grid(year ~ species)
```

:::

:::{.column width="15%"}

:::

::::

## The Estimated Model

<center>
<font size="120pt"><br/>
$\bigstar$ Let's try it! $\bigstar$

<br/>
</font>
</center>

1. Obtain your estimated model and write it down
2. Try to plot your model if you would like

## Additional Flexibility with Interactions

. . .

::::{.columns}

:::{.column width="45%"}

Note that our new model, including the interaction between `species` and `year` includes nine (9) parallel lines

```{r}
#| fig.align: center
#| fig.height: 7

ggplot() + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = isy.pred,
                color = species,
                linetype = as.factor(year)),
            lwd = 1) + 
  geom_point(data = penguins_train, 
             aes(x = flipper_length_mm,
                 y = body_mass_g,
                 color = species,
                 shape = as.factor(year)),
             alpha = 0.75) +
  labs(x = "Flipper Length",
       y = "Body Mass",
       color = "Species",
       linetype = "Year",
       shape = "Year")
```

:::

:::{.column width="10%"}

:::

:::{.column width="45%"}

:::

::::

## Additional Flexibility with Interactions

::::{.columns}

:::{.column width="45%"}

Note that our new model, including the interaction between `species` and `year` includes nine (9) parallel lines

```{r}
#| fig.align: center
#| fig.height: 7

ggplot() + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = isy.pred,
                color = species,
                linetype = as.factor(year)),
            lwd = 1) + 
  geom_point(data = penguins_train, 
             aes(x = flipper_length_mm,
                 y = body_mass_g,
                 color = species,
                 shape = as.factor(year)),
             alpha = 0.75) +
  labs(x = "Flipper Length",
       y = "Body Mass",
       color = "Species",
       linetype = "Year",
       shape = "Year")
```

:::

:::{.column width="10%"}

:::

:::{.column width="45%"}

Where our model including `species` and `year` independently only included six

```{r}
#| fig.align: center
#| fig.height: 7

ggplot() + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = species.year.pred,
                color = species,
                linetype = as.factor(year)),
            lwd = 1) + 
  geom_point(data = penguins_train, 
             aes(x = flipper_length_mm,
                 y = body_mass_g,
                 color = species),
             alpha = 0.75) +
  labs(x = "Flipper Length",
       y = "Body Mass",
       color = "Species", 
       linetype = "Year",
       shape = "Year")
```

:::

:::{.column width="15%"}

:::

::::

## Additional Flexibility with Interactions

<center>
<font size="120pt"><br/>
$\bigstar$ Let's try it! $\bigstar$

<br/>
</font>
</center>

1. Whether you plotted your model predictions or not, how many parallel lines does your interaction model consist of?
2. How many additional $\beta$-coefficients were estimated for your interaction model, compared to the number of $\beta$-coefficients that would have been estimated for a model with the same predictors but no interaction?

## Mini-Summary: Interactions Between Categorical Variables

+ Interactions between pairs of categorical variables can be used to investigate whether the effect of a change in levels of one of the variables depends on the level of the second categorical variable

+ The result of including such an interaction is **a unique model intercept for each combination of levels of the categorical variables**

+ Note that the resulting models will still be *parallel* unless different types of interactions are also present in the model

## Interactions Between a Categorical Predictor and a Numerical Predictor

. . .

Another reasonable question to ask is whether the association between flipper length and body mass changes based on the species of penguin

. . .

We can investigate this by constructing and analysing a model that includes an interaction between `species` and flipper length

. . . 

Again, we can compare the model forms below:

. . .

**Model with Flipper Length and Species Independently:**

$$\mathbb{E}\left[\text{body mass}\right] = \beta_0 + \beta_1\cdot\left(\text{flipper length}\right) + \beta_2\cdot\left(\text{speciesChinstrap}\right) + \beta_3\cdot\left(\text{speciesGentoo}\right)$$

. . .

**Model with Interaction Between Flipper Length and Species:**

\begin{align}\mathbb{E}\left[\text{body mass}\right] = \beta_0 + &\beta_1\cdot\left(\text{flipper length}\right) + \beta_2\cdot\left(\text{speciesChinstrap}\right) + \beta_3\cdot\left(\text{speciesGentoo}\right) + \\
&\beta_4\cdot\left(\text{flipper length}\right)\left(\text{speciesChinstrap}\right) +\\ 
&\beta_5\cdot\left(\text{flipper length}\right)\left(\text{speciesGentoo}\right)
\end{align}

## Building the Model

. . .

We construct our model in the same way as we did with the previous interaction model

. . .

```{r}
#| echo: true
#| eval: true

mlr_fls_isfl_spec <- linear_reg() %>%
  set_engine("lm")

mlr_fls_isfl_rec <- recipe(body_mass_g ~ flipper_length_mm + species,
                           data = penguins_train) %>%
  step_dummy(species) %>%
  step_interact(~ starts_with("species"):flipper_length_mm)

mlr_fls_isfl_wf <- workflow() %>%
  add_model(mlr_fls_isfl_spec) %>%
  add_recipe(mlr_fls_isfl_rec)

mlr_fls_isfl_fit <- mlr_fls_isfl_wf %>%
  fit(penguins_train)
```

## Building the Model

<center>
<font size="120pt"><br/>
$\bigstar$ Let's try it! $\bigstar$

<br/>
</font>
</center>

1. Drop one of your categorical predictors from your earlier model (if you'd like), and consider a model with just one numerical and one categorical predictor
2. Create a model *specification* and *recipe* that will accommodate an interaction between your numerical and categorical predictor (only one of them, even if your model has multiple...just to keep things relatively "simple")
3. Package your *specification* and *recipe* together into a *workflow*
4. Fit your *workflow* to your training data

## The Estimated Model

```{r}
mlr_fls_isfl_fit %>%
  extract_fit_engine() %>%
  tidy() %>%
  kable() %>%
  kable_styling()
```

$\displaystyle{\mathbb{E}\left[\text{body mass}\right] \approx ...}$

## The Estimated Model (Cont'd.)

::::{.columns}

:::{.column width="15%"}

:::

:::{.column width="70%"}

```{r}
#| fig.align: center
#| fig.height: 4

new_data <- mlr_fls_isfl_fit %>%
  augment(new_data) %>%
  rename(isfl.pred = .pred)

ggplot() + 
  geom_point(data = penguins_train,
             aes(x = flipper_length_mm, 
                 y = body_mass_g,
                 color = species),
             alpha = 0.5) + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = isfl.pred,
                color = species),
            lwd = 1.5) + 
  labs(x = "Flipper Length",
       y = "Body Mass",
       color = "Species")
```

:::

:::{.column width="15%"}

:::

::::

. . .

::::{.columns}

:::{.column width="15%"}

:::

:::{.column width="70%"}

```{r}
#| fig.align: center
#| fig.height: 4

ggplot() + 
  geom_point(data = penguins_train,
             aes(x = flipper_length_mm, 
                 y = body_mass_g,
                 color = species),
             alpha = 0.5) + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = isfl.pred,
                color = species),
            lwd = 1.5) + 
  labs(x = "Flipper Length",
       y = "Body Mass") +
  theme(legend.position = "None") +
  facet_wrap(~species)
```

:::

:::{.column width="15%"}

:::

::::

## The Estimated Model

<center>
<font size="120pt"><br/>
$\bigstar$ Let's try it! $\bigstar$

<br/>
</font>
</center>

1. As with the model you built previously, extract the estimated model from the fitted object
2. Write down the estimated model
3. If you would like, try to plot the model

## Additional Flexibility with Interactions

. . .

Note that our new model, including an interaction between `species` and flipper length still includes only three lines

. . .

:::{.columns}

:::{.column width="15%"}

:::

:::{.column width="70%"}

```{r}
ggplot() + 
  geom_point(data = penguins_train,
             aes(x = flipper_length_mm, 
                 y = body_mass_g,
                 color = species),
             alpha = 0.5) + 
  geom_line(data = new_data,
            aes(x = flipper_length_mm,
                y = isfl.pred,
                color = species),
            lwd = 1.5) + 
  labs(x = "Flipper Length",
       y = "Body Mass",
       color = "Species")
```

:::

:::{.column width="15%}

:::

::::

. . .

Those lines are no longer parallel, though

. . . 

We needed additional $\beta$-coefficients to accommodate our slope adjustments

. . .

$\bigstar$ How many additional $\beta$-coefficients did your most recent interaction model require?

## Interpreting this Interaction Model

. . .

**Overarching Model:**

\begin{align}\mathbb{E}\left[\text{body mass}\right] = -2797.76 ~+~ &34.28\cdot\left(\text{flipper length}\right) - 129.71\cdot\left(\text{speciesChinstrap}\right) +\\ &- 4216.63\cdot\left(\text{speciesGentoo}\right) +\\
&- 0.37\cdot\left(\text{flipper length}\right)\left(\text{speciesChinstrap}\right) +\\ 
&21.39\cdot\left(\text{flipper length}\right)\left(\text{speciesGentoo}\right)
\end{align}

. . .

**Model for Adelie Penguins:**

\begin{align}\mathbb{E}\left[\text{body mass}\right] = -2797.76 ~+~ &34.28\cdot\left(\text{flipper length}\right)
\end{align}

. . . 

> Given an Adelie penguin, an increase of 1mm in flipper length is associated with an increase in expected body mass by about 34.28g

## Interpreting this Interaction Model

**Overarching Model:**

\begin{align}\mathbb{E}\left[\text{body mass}\right] = -2797.76 ~+~ &34.28\cdot\left(\text{flipper length}\right) - 129.71\cdot\left(\text{speciesChinstrap}\right) +\\ &- 4216.63\cdot\left(\text{speciesGentoo}\right) +\\
&- 0.37\cdot\left(\text{flipper length}\right)\left(\text{speciesChinstrap}\right) +\\ 
&21.39\cdot\left(\text{flipper length}\right)\left(\text{speciesGentoo}\right)
\end{align}

**Model for Chinstrap Penguins:**

. . .

\begin{align}\mathbb{E}\left[\text{body mass}\right] = -2927.47 ~+~ &33.91\cdot\left(\text{flipper length}\right)
\end{align}

. . . 

> Given a Chinstrap penguin, an increase of 1mm in flipper length is associated with an increase in expected body mass by about 33.91g

. . .

Note that this is not significantly different than the expected change for Adelies

## Interpreting this Interaction Model

**Overarching Model:**

\begin{align}\mathbb{E}\left[\text{body mass}\right] = -2797.76 ~+~ &34.28\cdot\left(\text{flipper length}\right) - 129.71\cdot\left(\text{speciesChinstrap}\right) +\\ &- 4216.63\cdot\left(\text{speciesGentoo}\right) +\\
&- 0.37\cdot\left(\text{flipper length}\right)\left(\text{speciesChinstrap}\right) +\\ 
&21.39\cdot\left(\text{flipper length}\right)\left(\text{speciesGentoo}\right)
\end{align}

**Model for Gentoo Penguins:**

. . .

\begin{align}\mathbb{E}\left[\text{body mass}\right] = -7014.39 ~+~ &55.67\cdot\left(\text{flipper length}\right)
\end{align}

. . . 

> Given a Gentoo penguin, an increase of 1mm in flipper length is associated with an increase in expected body mass by about 55.67g

## Interpreting Models with Categorical-Numerical Interactions

<center>
<font size="120pt"><br/>
$\bigstar$ Let's try it! $\bigstar$

<br/>
</font>
</center>

1. Provide interpretations for your interaction model with respect to at least two of the levels of the categorical variable involved in your interaction

## Mini-Summary: Interactions Between a Categorical and a Numerical Variable

+ Interactions between a categorical variable and a numerical variable can be used to investigate whether the effect of a unit increase in the numerical variable differs across the levels of the categorical variable
+ The result of including such an interaction is **a unique model slope($^*$) for each level of the categorical variable**

## Interactions Between Numerical Variables

. . . 

Also reasonable, yet more difficult to interpret, is the possibility that the association between bill length and penguin body mass is dependent on the penguin's bill depth (another numerical predictor)

. . .

> We've switched from flipper length to bill length and bill depth because some interaction between those features is intuitively plausible

. . .

We can investigate whether such an interaction effect is present by constructing and analysing a model which includes an interaction term between bill length and bill depth

. . .

As we did previously, we can compare the proposed model forms:

. . .

**Model with Bill Length and Bill Depth Independently:** 

\begin{align}\mathbb{E}\left[\text{body mass}\right] = \beta_0 +~ &\beta_1 \cdot\left(\text{bill length}\right) + \beta_2\cdot\left(\text{bill depth}\right)
\end{align}

. . .

**Model with Interaction Between Bill Length and Bill Depth:** 

\begin{align} \mathbb{E}\left[\text{body mass}\right] = \beta_0 +~ &\beta_1 \cdot\left(\text{bill length}\right) + \beta_2\cdot\left(\text{bill depth}\right) +\\
&\beta_3\cdot\left(\text{bill length}\right)\left(\text{bill depth}\right)
\end{align}

## Building the Model

. . .

No real changes here -- we'll use `step_interact()` again

. . .

```{r}
#| echo: true
#| eval: true

mlr_blbd_i_spec <- linear_reg() %>%
  set_engine("lm")

mlr_blbd_i_rec <- recipe(body_mass_g ~ bill_length_mm + bill_depth_mm,
                           data = penguins_train) %>%
  step_interact(~ bill_length_mm:bill_depth_mm)

mlr_blbd_i_wf <- workflow() %>%
  add_model(mlr_blbd_i_spec) %>%
  add_recipe(mlr_blbd_i_rec)

mlr_blbd_i_fit <- mlr_blbd_i_wf %>%
  fit(penguins_train)
```

## Building the Model

<center>
<font size="120pt"><br/>
$\bigstar$ Let's try it! $\bigstar$

<br/>
</font>
</center>

1. Choose two numerical predictors of price which might have an interaction effect in determining price of the rentals in your data set
2. As with the previous models, define the model *specification* and *recipe*, then build and *fit* the *workflow* to your training data

## The Estimated Model

```{r}
mlr_blbd_i_fit %>%
  extract_fit_engine() %>%
  tidy() %>%
  kable() %>%
  kable_styling()
```

$\displaystyle{\mathbb{E}\left[\text{body mass}\right] = \cdots}$

## The Estimated Model (Cont'd.)

```{r}
#| fig.align: center
#| fig.height: 7

new_data_length <- crossing(
  bill_length_mm = seq(
    min(penguins_train$bill_length_mm, na.rm = TRUE),
    max(penguins_train$bill_length_mm, na.rm = TRUE),
    length.out = 250),
  bill_depth_mm = c(14, 17, 20)
)

new_data_depth <- crossing(
  bill_length_mm = c(35, 45, 55),
  bill_depth_mm = seq(
    min(penguins_train$bill_depth_mm, na.rm = TRUE),
    max(penguins_train$bill_depth_mm, na.rm = TRUE),
    length.out = 250)
)

new_data_length <- mlr_blbd_i_fit %>%
  augment(new_data_length)

new_data_depth <- mlr_blbd_i_fit %>%
  augment(new_data_depth)

p1 <- ggplot() +
  geom_point(data = penguins_train,
             aes(x = bill_length_mm,
                 y = body_mass_g),
             alpha = 0.5) + 
  geom_line(data = new_data_length,
            aes(x = bill_length_mm,
                y = .pred,
                color = as.factor(bill_depth_mm)),
            lwd = 1.5) + 
  labs(x = "Bill Length (mm)",
       y = "Body Mass (g)",
       color = "Bill Depth (mm)")

p2 <- ggplot() +
  geom_point(data = penguins_train,
             aes(x = bill_depth_mm,
                 y = body_mass_g),
             alpha = 0.5,
             show.legend = FALSE) + 
  geom_line(data = new_data_depth,
            aes(x = bill_depth_mm,
                y = .pred,
                color = as.factor(bill_length_mm)),
            lwd = 1.5) + 
  labs(x = "Bill Depth (mm)",
       y = "Body Mass (g)",
       color = "Bill Length (mm)")

(p1 / p2)
```

## The Estimated Model

<center>
<font size="120pt"><br/>
$\bigstar$ Let's try it! $\bigstar$

<br/>
</font>
</center>

1. Extract the estimated model from the fitted object
2. Write down the equation for your estimated model
3. Construct a plot, if you would like to do so

## Additional Flexibility with Interactions

. . . 

This model consists of a warped surface.

. . .

As long as we fix a value of bill length, then the expected effect of a unit increase in bill depth on penguin body mass is constant

. . . 

Similarly, as long as we fix a value of bill depth, then the expected effect of a unit increase in bill length on penguin body mass is constant

. . . 

The effect of a unit increase in either bill length or depth, however, depends on the current level of the other predictor

. . .

$\bigstar$ How many additional $\beta$-coefficients were required for your newest interaction model?

## Interpreting this Interaction Model

. . . 

As a reminder, the general form for this interaction model was

. . .

\begin{align} \mathbb{E}\left[\text{body mass}\right] = \beta_0 +~ &\beta_1 \cdot\left(\text{bill length}\right) + \beta_2\cdot\left(\text{bill depth}\right) +\\
&\beta_3\cdot\left(\text{bill length}\right)\left(\text{bill depth}\right)
\end{align}

. . .

**Effect of a Unit Change in Bill Length, Holding Bill Depth Constant:**

> Holding bill depth constant, a unit increase in bill length is associated with an expected increase in penguin body mass of $\displaystyle{\beta_1 + \beta_3\cdot\left(\text{bill depth}\right)}$

. . .

**Effect of a Unit Change in Bill Depth, Holding Bill Length Constant:**

> Holding bill length constant, a unit increase in bill depth is associated with an expected increase in penguin body mass of $\displaystyle{\beta_2 + \beta_3\cdot\left(\text{bill length}\right)}$

## Interpreting this Interaction Model

. . . 

Our estimated model was

. . .

\begin{align} \mathbb{E}\left[\text{body mass}\right] = -27159.52 +~ &751.56 \cdot\left(\text{bill length}\right) + 1581.33\cdot\left(\text{bill depth}\right) +\\
&-38.33\cdot\left(\text{bill length}\right)\left(\text{bill depth}\right)
\end{align}

. . .

**Effect of a Unit Change in Bill Length, Holding Bill Depth Constant:**

> Holding bill depth constant, a unit increase in bill length is associated with an expected increase in penguin body mass of $\displaystyle{\beta_1 + \beta_3\cdot\left(\text{bill depth}\right)}$

. . .

For this particular estimated model, 

\begin{align} \beta_1 + \beta_3 \cdot\left(\text{bill depth}\right) &\approx 751.56 - 38.33\cdot\left(\text{bill depth}\right)
\end{align}

. . .

**For Example:** Holding bill depth constant at 15mm, a unit increase in bill length is associated with an expected increase in body mass by about 
\begin{align} 751.56 - 38.33\cdot\left(15\right) &= 176.61\text{g}
\end{align}


## Interpreting this Interaction Model

Our estimated model was

\begin{align} \mathbb{E}\left[\text{body mass}\right] = -27159.52 +~ &751.56 \cdot\left(\text{bill length}\right) + 1581.33\cdot\left(\text{bill depth}\right) +\\
&-38.33\cdot\left(\text{bill length}\right)\left(\text{bill depth}\right)
\end{align}

**Effect of a Unit Change in Bill Depth, Holding Bill Length Constant:**

> Holding bill length constant, a unit increase in bill depth is associated with an expected increase in penguin body mass of $\displaystyle{\beta_2 + \beta_3\cdot\left(\text{bill length}\right)}$

. . .

For this particular estimated model, 

\begin{align} \beta_1 + \beta_3 \cdot\left(\text{bill depth}\right) &\approx 1581.33 - 38.33\cdot\left(\text{bill length}\right)
\end{align}

. . .

**For Example:** Holding bill length constant at 40mm, a unit increase in bill depth is associated with an expected increase in body mass by about 
\begin{align} 1581.33 - 38.33\cdot\left(40\right) &= 48.13\text{g}
\end{align}

## Interpreting Models with Numerical-Numerical Interactions

<center>
<font size="120pt"><br/>
$\bigstar$ Let's try it! $\bigstar$

<br/>
</font>
</center>

1. Provide interpretations of the association between each of your numerical predictors and the response under this newest interaction model

## Mini-Summary: Interactions Between Two Numerical Variables

+ Interactions between two numerical variables can be used to investigate whether the effect of a unit increase in one numerical predictor depends on the level of the other
+ The result of including such an interaction is a **warped surface** such that a cross-section holding one of the numerical predictors constant results in a straight line (constant slope) relationship between the remaining numerical predictor and the response

## Summary

+ *Interaction terms* are another example of *higher-order* terms in models that allow us to model associations more complex than "straight line"
+ We add interaction terms to a model using the `{tidymodels}` framework by appending `step_interact()` to our *recipe*

  + `step_interact()` requires a tilde `~` followed by the interaction variables with a colon separating them
  + There are three types of two-way interaction (categorical-categorical, categorical-numerical, numerical-numerical)
  
+ Categorical-categorical interactions result in additional **intercept adjustments* corresponding to each combination of levels of the interacting predictors
+ Categorical-numerical interactions result in **slope adjustments** between the numerical predictor and response for each level of the categorical predictor
+ Numerical-numerical interactions result in a **warped prediction surface** such that the "slopes" in the direction of each numerical predictor change, however, if we look at a cross-section holding one of the numerical predictors constant, then the slope in the direction of the other numerical predictor is constant($^*$)
+ As we mentioned last time, interpreting models with higher-order terms can be a complex business, requiring some calculus knowledge -- we'll get some help from the `{marginaleffects}` package next

## Wait...What About Interactions Between More than Two Predictors???

. . .

::::{.columns}

:::{.column width="25%"}

:::

:::{.column width="50%"}

<center>

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Sup. It&#39;s a dirty job, but someone&#39;s gotta provide plausible and defensible rationales for nonmonotonic interactions. <a href="http://t.co/arCeYeK9Ot">pic.twitter.com/arCeYeK9Ot</a></p>&mdash; Research Wahlberg (@ResearchMark) <a href="https://twitter.com/ResearchMark/status/527489859636985857?ref_src=twsrc%5Etfw">October 29, 2014</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

</center>

:::

:::{.column width="25%"}

:::

::::

## Next Time...

<center><font size="120pt"><br/>

Model Inference and Interpreation with the `{marginaleffects}` Package

</font>
</center>